[gd_scene load_steps=28 format=2]

[ext_resource path="res://entities/plants/Plant.gd" type="Script" id=1]
[ext_resource path="res://util/SettableTimer.tscn" type="PackedScene" id=2]
[ext_resource path="res://entities/plants/ModifierManager.gd" type="Script" id=3]
[ext_resource path="res://assets/ui.png" type="Texture" id=4]
[ext_resource path="res://entities/plants/InteractIcon.gd" type="Script" id=5]
[ext_resource path="res://sound/plants/harvest.wav" type="AudioStream" id=6]
[ext_resource path="res://sound/plants/despawn.wav" type="AudioStream" id=7]
[ext_resource path="res://sound/plants/grow2.wav" type="AudioStream" id=8]
[ext_resource path="res://util/RandomSoundPlayer.gd" type="Script" id=9]
[ext_resource path="res://sound/plants/grow0.wav" type="AudioStream" id=10]
[ext_resource path="res://sound/plants/grow1.wav" type="AudioStream" id=11]

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;
uniform float intensity : hint_range(0.0, 1.0) = 0.0;
uniform float saturation : hint_range(0.0, 1.0) = 1.0;

// https://github.com/arkology/ShaderV/blob/master/addons/shaderV/rgba/shiftHSV.gdshader
vec3 _hsv2rgb(vec3 _hsv_color_){
	vec4 _K_hsv2rgb = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
	vec3 _p_hsv2rgb = abs(fract(_hsv_color_.xxx + _K_hsv2rgb.xyz) * 6.0 - _K_hsv2rgb.www);
	return vec3(_hsv_color_.z * mix(_K_hsv2rgb.xxx, 
				clamp(_p_hsv2rgb - _K_hsv2rgb.xxx, 0.0, 1.0),
				_hsv_color_.y));
}

vec3 _rgb2hvs(vec3 _rgb_color_){
	vec4 _K_rgb2hvs = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
	vec4 _p_rgb2hvs = mix( vec4(_rgb_color_.bg, _K_rgb2hvs.wz),
									vec4(_rgb_color_.gb, _K_rgb2hvs.xy),
									step(_rgb_color_.b, _rgb_color_.g));
	vec4 _q_rgb2hvs = mix( vec4(_p_rgb2hvs.xyw, _rgb_color_.r), 
									vec4(_rgb_color_.r, _p_rgb2hvs.yzx),
									step(_p_rgb2hvs.x, _rgb_color_.r));
	float _d_rgb2hvs = _q_rgb2hvs.x - min(_q_rgb2hvs.w, _q_rgb2hvs.y);
	return vec3(vec3(abs(_q_rgb2hvs.z + (_q_rgb2hvs.w - _q_rgb2hvs.y) / (6.0 * _d_rgb2hvs + 1.0e-10)),
					_d_rgb2hvs / (_q_rgb2hvs.x + 1.0e-10),
					_q_rgb2hvs.x));
}

void fragment() {
	vec4 color = texture(TEXTURE, UV);
	
	vec3 color_hsv = _rgb2hvs(color.rgb);
	color_hsv.g *= saturation;
	color = vec4(_hsv2rgb(color_hsv), color.a);
	
	COLOR = vec4(mix(color.rgb, vec3(1, 1, 1), intensity), color.a);
}"

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/intensity = 0.0
shader_param/saturation = 1.0

[sub_resource type="StreamTexture" id=13]
load_path = "res://.import/plant-eater.png-c57d7b56208da7e589ff8d0b41198a92.stex"

[sub_resource type="AtlasTexture" id=12]
resource_local_to_scene = true
atlas = SubResource( 13 )
region = Rect2( 123, 0, 41, 54 )

[sub_resource type="CircleShape2D" id=11]

[sub_resource type="AtlasTexture" id=19]
atlas = ExtResource( 4 )
region = Rect2( 31, 0, 7, 9 )

[sub_resource type="AtlasTexture" id=20]
atlas = ExtResource( 4 )
region = Rect2( 38, 0, 14, 11 )

[sub_resource type="Animation" id=22]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Texture:position:y")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Texture:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}

[sub_resource type="Animation" id=21]
resource_name = "hover"
length = 3.75
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Texture:position:y")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.5, 3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.0, -6.0, 0.0 ]
}

[sub_resource type="Animation" id=5]
resource_name = "RESET"
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:material:shader_param/intensity")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite:material:shader_param/saturation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Sprite:self_modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Shape:monitorable")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}

[sub_resource type="Animation" id=10]
resource_name = "glow"
length = 2.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:material:shader_param/intensity")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 2 ),
"transitions": PoolRealArray( 2, 0.5, 1 ),
"update": 0,
"values": [ 0.2, 0.0, 0.2 ]
}

[sub_resource type="Animation" id=6]
resource_name = "grow"
length = 0.7
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:scale:y")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.6 ),
"transitions": PoolRealArray( 1, 0.25, 1 ),
"update": 0,
"values": [ 1.0, 1.2, 1.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:scale:x")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.1, 0.4, 0.7 ),
"transitions": PoolRealArray( 1, 0.574349, 1 ),
"update": 0,
"values": [ 1.0, 1.1, 1.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite:material:shader_param/intensity")
tracks/2/interp = 2
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.35, 0.7 ),
"transitions": PoolRealArray( 0.25, 2.07053, 1 ),
"update": 0,
"values": [ 0.0, 1.0, 0.0 ]
}
tracks/3/type = "method"
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.15 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "update_sprite"
} ]
}
tracks/4/type = "method"
tracks/4/path = NodePath("SFXGrow")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0.15 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "play"
} ]
}

[sub_resource type="Animation" id=7]
resource_name = "wilt"
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 0.366022, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 0.8, 0.8 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:material:shader_param/saturation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite:self_modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2, 0.4 ),
"transitions": PoolRealArray( 1, 0.5, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0.666667 ) ]
}
tracks/3/type = "method"
tracks/3/path = NodePath("SFXGrow")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.2 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "play"
} ]
}

[sub_resource type="Animation" id=15]
resource_name = "death"
length = 0.7
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 0.7 ),
"transitions": PoolRealArray( 3, 0.333333, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 0.846407, 0.75023 ), Vector2( 0, 0 ) ]
}
tracks/1/type = "method"
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.7 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Shape:monitorable")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/3/type = "method"
tracks/3/path = NodePath("InteractIcon")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "retract"
} ]
}
tracks/4/type = "audio"
tracks/4/path = NodePath("SFX2D")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 7 )
} ],
"times": PoolRealArray( 0.3 )
}

[sub_resource type="Animation" id=16]
resource_name = "despawn"
length = 0.55
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:scale:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.15, 0.5 ),
"transitions": PoolRealArray( 0.5, 2, 1 ),
"update": 0,
"values": [ 1.0, 1.5, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:material:shader_param/intensity")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.05, 0.5 ),
"transitions": PoolRealArray( 1, 1.62451, 1 ),
"update": 0,
"values": [ 0.0, 0.0, 1.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Shape:monitorable")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/3/type = "method"
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.55 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Sprite:scale:y")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0.05, 0.25, 0.5 ),
"transitions": PoolRealArray( 0.5, 2, 1 ),
"update": 0,
"values": [ 1.0, 2.0, 0.0 ]
}
tracks/5/type = "method"
tracks/5/path = NodePath("InteractIcon")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "retract"
} ]
}

[sub_resource type="Animation" id=17]
resource_name = "spawn"
length = 0.7
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:scale:y")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.15, 0.5 ),
"transitions": PoolRealArray( 1, 0.25, 1 ),
"update": 0,
"values": [ 0.0, 1.2, 1.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:scale:x")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.35, 0.6 ),
"transitions": PoolRealArray( 1, 0.574349, 1 ),
"update": 0,
"values": [ 0.0, 1.1, 1.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite:material:shader_param/intensity")
tracks/2/interp = 2
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.45, 0.7 ),
"transitions": PoolRealArray( 0.25, 2.07053, 1 ),
"update": 0,
"values": [ 0.0, 1.0, 0.0 ]
}

[node name="Plant" type="Node2D"]
script = ExtResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 4 )
texture = SubResource( 12 )
offset = Vector2( 0, -15 )

[node name="Shape" type="Area2D" parent="."]
collision_layer = 16
collision_mask = 16
monitoring = false

[node name="CollisionShape2D" type="CollisionShape2D" parent="Shape"]
position = Vector2( 0, -11 )
shape = SubResource( 11 )

[node name="TimerGrow" parent="." instance=ExtResource( 2 )]
one_shot = true

[node name="TimerWilt" parent="." instance=ExtResource( 2 )]
one_shot = true

[node name="TimerInteract" parent="." instance=ExtResource( 2 )]
one_shot = true

[node name="TimerDespawn" type="Timer" parent="."]
wait_time = 6.0
one_shot = true

[node name="InteractIcon" type="Node2D" parent="."]
scale = Vector2( 1e-05, 1e-05 )
script = ExtResource( 5 )
icon_water = SubResource( 19 )
icon_harvest = SubResource( 20 )

[node name="Texture" type="Sprite" parent="InteractIcon"]
texture = SubResource( 19 )

[node name="AnimationTexture" type="AnimationPlayer" parent="InteractIcon"]
autoplay = "hover"
anims/RESET = SubResource( 22 )
anims/hover = SubResource( 21 )

[node name="AnimationBehavior" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 5 )
anims/glow = SubResource( 10 )
anims/grow = SubResource( 6 )
anims/wilt = SubResource( 7 )

[node name="AnimationState" type="AnimationPlayer" parent="."]
autoplay = "spawn"
anims/RESET = SubResource( 5 )
anims/death = SubResource( 15 )
anims/despawn = SubResource( 16 )
anims/spawn = SubResource( 17 )

[node name="ModifierManager" type="Node" parent="."]
script = ExtResource( 3 )

[node name="SFX" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 6 )
bus = "SFX"

[node name="SFX2D" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 7 )
max_distance = 168.0
bus = "SFX"

[node name="SFXGrow" type="Node" parent="."]
script = ExtResource( 9 )

[node name="AudioStreamPlayer" type="AudioStreamPlayer2D" parent="SFXGrow"]
stream = ExtResource( 10 )
max_distance = 168.0
attenuation = 0.5
bus = "SFX"

[node name="AudioStreamPlayer2" type="AudioStreamPlayer2D" parent="SFXGrow"]
stream = ExtResource( 11 )
max_distance = 168.0
attenuation = 0.5
bus = "SFX"

[node name="AudioStreamPlayer3" type="AudioStreamPlayer2D" parent="SFXGrow"]
stream = ExtResource( 8 )
max_distance = 168.0
attenuation = 0.5
bus = "SFX"
